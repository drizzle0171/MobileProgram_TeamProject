[{"/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/main.js":"1","/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/registerServiceWorker.js":"2","/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/App.vue":"3","/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/components/TodoHeader.vue":"4","/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/components/TodoInput.vue":"5","/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/components/TodoList.vue":"6","/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/components/TodoFooter.vue":"7","/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/components/common/AlertModal.vue":"8"},{"size":169,"mtime":1648717835947,"results":"9","hashOfConfig":"10"},{"size":903,"mtime":1648717835947,"results":"11","hashOfConfig":"10"},{"size":1462,"mtime":1649089660182,"results":"12","hashOfConfig":"10"},{"size":214,"mtime":1648717835947,"results":"13","hashOfConfig":"10"},{"size":1558,"mtime":1649090435761,"results":"14","hashOfConfig":"10"},{"size":5400,"mtime":1649090408464,"results":"15","hashOfConfig":"10"},{"size":489,"mtime":1648717835947,"results":"16","hashOfConfig":"10"},{"size":1636,"mtime":1649090333990,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"68xyu0",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/main.js",[],[],"/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/registerServiceWorker.js",[],"/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/App.vue",[],[],"/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/components/TodoHeader.vue",[],"/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/components/TodoInput.vue",[],"/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/components/TodoList.vue",["37"],"<template>\n  <div>\n    <div>\n      <transition-group name=\"list\" tag=\"ul\">\n        <li v-for=\"(todoItem, index) in propsdata\" :key=\"todoItem\" class=\"shadow\">\n          <i class=\"checkBtn fas fa-check\" aria-hidden=\"true\"></i>\n            <div class=\"todo-item-text\">\n              <span>{{ todoItem }}</span> <p class=\"todo-memo\"> 메모자리 </p>\n            </div>\n            <span class=\"moreinfoBtn\" type=\"button\" @click=\"moreInfo(index)\">\n              <i class=\"fas fa-plus\" aria-hidden=\"true\"></i>\n            </span>\n        </li>\n      </transition-group>\n    </div>\n\n    <!-- modal_info -->\n    <div class=\"info-mask\" v-if=\"showInfo == true\">\n      <div class=\"info-wrapper\">\n        <div class=\"info-container\">\n          <span class=\"close\" type=\"button\" @click=\"showInfo = false\">\n            <i class=\"fas fa-times\" aria-hidden=\"true\"></i>\n          </span>\n          <div class = \"memobox\">\n            <input v-if=\"showModiHead\" v-model=\"newHead\" type = \"text\" placeholder=\"Type your goal\" style=\"text-align: left\">\n          </div>  -->\n          <span @click=\"modifyHead\" >\n            <h3 style=\"text-align: left\"> {{ item }} <hr> </h3>\n            </span>\n          <p style=\"text-align: left\"> <b>D-day</b> 4월 5일</p>\n          <p style=\"text-align: left\"> <b>카테고리</b> 학교</p>\n          <p style=\"text-align: left\"> <b>중요도</b> 매우 중요</p>\n          <div class = \"memobox\">\n\n            <p style=\"text-align: left\"> <b>메모</b> \n              <span class=\"modified\" type=\"button\" @click=\"modify\">\n                <i class=\"fas fa-pencil-alt\"></i>\n              </span>\n                <br> <input type=\"text\" v-model=\"memo\" placeholder=\"Memo...\" v-on:keyup.enter=\"addMemo\">\n              </p>\n          </div>\n          <span\n            class=\"removeBtn\"\n            type=\"button\"\n            @click=\"removeTodo(todoItem, index)\"\n          >\n            <i class=\"fas fa-trash-alt\" aria-hidden=\"true\"> 삭제 </i>\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      showInfo: false,\n      showModiHead: false,\n      item: \"\",\n      memo: \"\",\n      memoList: [],\n      newHead: \"\"\n    };\n  },\n  props: [\"propsdata\"],\n  methods: {\n    removeTodo(todoItem, index) {\n      this.$emit(\"removeTodo\", todoItem, index);\n      this.showInfo = false;\n    },\n    moreInfo(index) {\n      this.showInfo = true;\n      this.item = this.propsdata[index];\n    },\n    modifyHead() {\n      // localStorage.removeItem(todoItem);\n      console.log(localStorage)\n      console.log(this.propsdata)\n      this.item = \"\";\n      this.showModiHead=true;\n      this.todoItem = this.newHead\n    },\n    modify() {\n      localStorage.setItem(this.memo, this.memo);\n      this.memoList.push(this.memo);\n\n    },\n    clearInput() {\n      this.memo = '';\n    }\n  },\n};\n</script>\n\n<style scoped>\nbody {\n  margin: 0;\n}\ndiv {\n  box-sizing: border-box;\n}\n.info-container {\n  width: 300px;\n  margin: 0px auto;\n  padding: 20px 30px;\n  background-color: #fff;\n  border-radius: 2px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\n  transition: all 0.3s ease;\n  font-family: Helvetica, Arial, sans-serif;\n}\n\n.info-mask {\n  position: fixed;\n  z-index: 9998;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: table;\n  transition: opacity 0.3s ease;\n}\n\n.info-wrapper {\n  display: table-cell;\n  vertical-align: middle;\n}\n\n.white-bg {\n  width: 100%;\n  background: white;\n  border-radius: 8px;\n  padding: 20px;\n}\nul {\n  list-style-type: none;\n  padding: 0px;\n  margin: 0;\n  text-align: left;\n}\n\nli {\n  display: flex;\n  margin: 0.5rem 0;\n  padding: 0 0.9rem;\n  background: white;\n  border-radius: 5px;\n  align-items: center;\n}\n\n.todo-item-text {\n  padding: 15px;\n  word-break: break-all;\n  align-items: center;\n}\n\n.todo-memo {\n  margin: 0px 2px;\n  font-size: 12px;\n  color: gray;\n}\n\n.checkBtn {\n  line-height: 45px;\n  color: #62acde;\n  margin-right: 5px;\n}\n.removeBtn {\n  margin-left: auto;\n  color: #de4343;\n  font-size: 13px;\n}\n.moreinfoBtn {\n  display: table-cell;\n  margin-left: auto;\n  color: purple;\n  vertical-align: middle;\n}\n.list-enter-active,\n.list-leave-active {\n  transition: all 1s;\n}\n.list-enter,\n.list-leave-to {\n  opacity: 0;\n  transform: translateY(30px);\n}\n.close {\n  margin-left: auto;\n  color: #de4343;\n  float: right;\n}\n.modified {\n  margin-left: auto;\n  color: #000000;\n  float: right;\n}\ninput:focus {\n  outline: none;\n}\n/* .memobox {\n  background: white;\n  height: 50px;\n  line-height: 50px;\n  border-radius: 5px;\n} */\n.memobox {\n  border-style: none;\n  font-size: 0.9rem;\n}\n\n</style>\n\n  props: ['propsdata'],\n  methods: {\n    removeTodo(todoItem, index) {\n      this.$emit('removeTodo', todoItem, index);\n    }\n  }\n}\n</script>\n\n<style scoped>\n  ul {\n    list-style-type: none;\n    padding-left: 0px;\n    margin-top: 0;\n    text-align: left;\n  }\n  li {\n    display: flex;\n    min-height: 50px;\n    height: 50px;\n    line-height: 50px;\n    margin: 0.5rem 0;\n    padding: 0 0.9rem;\n    background: white;\n    border-radius: 5px;\n  }\n  .checkBtn {\n    line-height: 45px;\n    color: #62acde;\n    margin-right: 5px;\n  }\n  .removeBtn {\n    margin-left: auto;\n    color: #de4343;\n  }\n\n  .list-enter-active, .list-leave-active {\n    transition: all 1s;\n  }\n  .list-enter, .list-leave-to {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n</style>\n","/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/components/TodoFooter.vue",[],"/Users/drizzle0171/Documents/github/MobileProgram_TeamProject/src/components/common/AlertModal.vue",[],{"ruleId":"38","severity":2,"message":"39","line":224,"column":1,"nodeType":"40"},"vue/no-parsing-error","Parsing error: x-invalid-end-tag.","VElement"]